[{"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\index.js":"1","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\App.js":"2","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\MovieList.js":"3","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\LikeMovieList.js":"4","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\BlockedMovieList.js":"5","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\NotFound.js":"6","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\Home.js":"7","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Menu\\Menu.js":"8","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Card\\BlockedMovieListCard.js":"9","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Card\\LikeMovieListCard.js":"10","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\store\\store.js":"11","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\features\\movieList\\AllInOneSlice.js":"12","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Card\\MovieListCard.js":"13"},{"size":413,"mtime":1652221619979,"results":"14","hashOfConfig":"15"},{"size":1072,"mtime":1652221619959,"results":"16","hashOfConfig":"15"},{"size":5691,"mtime":1652642810224,"results":"17","hashOfConfig":"15"},{"size":1472,"mtime":1652221619973,"results":"18","hashOfConfig":"15"},{"size":1509,"mtime":1652221619970,"results":"19","hashOfConfig":"15"},{"size":150,"mtime":1651886547960,"results":"20","hashOfConfig":"15"},{"size":107,"mtime":1651886547956,"results":"21","hashOfConfig":"15"},{"size":1005,"mtime":1652221619967,"results":"22","hashOfConfig":"15"},{"size":691,"mtime":1651886547950,"results":"23","hashOfConfig":"15"},{"size":685,"mtime":1651886547952,"results":"24","hashOfConfig":"15"},{"size":213,"mtime":1651886547963,"results":"25","hashOfConfig":"15"},{"size":1248,"mtime":1652221619977,"results":"26","hashOfConfig":"15"},{"size":1760,"mtime":1652221619963,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16113e6",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\index.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\App.js",["72"],[],"import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Routes, Route, Navigate, Link } from \"react-router-dom\";\r\nimport MovieList from \"./containers/Pages/MovieList\";\r\nimport LikeMovieList from \"./containers/Pages/LikeMovieList\";\r\nimport BlockedMovieList from \"./containers/Pages/BlockedMovieList\";\r\nimport NotFound from \"./containers/Pages/NotFound\";\r\nimport Menu from \"./Components/Menu/Menu\";\r\nimport Home from \"./containers/Pages/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Menu />\r\n      <main>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate replace to=\"/MovieList\" />} />\r\n          <Route path=\"/Home\" element={<Home />} />\r\n          <Route path=\"/MovieList\" element={<MovieList />} />\r\n          <Route path=\"/MovieList/LikeMovieList\" element={<LikeMovieList />} />\r\n          <Route\r\n            path=\"/MovieList/BlockedMovieList\"\r\n            element={<BlockedMovieList />}\r\n          ></Route>\r\n          <Route path=\"*\" element={<NotFound />} />\r\n        </Routes>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\MovieList.js",["73","74","75"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  like,\r\n  unlike,\r\n  block,\r\n  update,\r\n} from \"../../features/movieList/AllInOneSlice\";\r\nimport MovieListCard from \"../../Components/Card/MovieListCard\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./MovieList.css\";\r\n\r\nconst MovieList = () => {\r\n  const dispatch = useDispatch();\r\n  const fetchurl =\r\n    \"https://api.themoviedb.org/3/movie/top_rated?api_key=86114ad4ef0d64d69fc3890cc82c2f14&language=en-US&page=\";\r\n  const [curpage, setCurpage] = useState(1);\r\n  const [movies, setMovies] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"None\");\r\n  const [realData, setRealdata] = useState([]);\r\n  const movieinfos = useSelector((state) => state.movieList.movieInfo);\r\n  const liked = useSelector((state) => state.movieList.liked);\r\n  const blocked = useSelector((state) => state.movieList.blocked);\r\n\r\n  /* update data when first render and page changed */\r\n  useEffect(() => {\r\n    if (movieinfos.length < curpage * 20) {\r\n      fetch(fetchurl + curpage)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const movieThisPage = data.results;\r\n          dispatch(update(movieThisPage));\r\n          setMovies(movieThisPage);\r\n          setSortBy(\"None\");\r\n        });\r\n    } else {\r\n      const movieThisPage = movieinfos.slice(\r\n        (curpage - 1) * 20,\r\n        curpage * 20 + 1\r\n      );\r\n      setMovies(movieThisPage);\r\n      setSortBy(\"None\");\r\n    }\r\n  }, [curpage]);\r\n\r\n  /* update data when filter changed */\r\n  useEffect(() => {\r\n    let toSort = [...movies];\r\n    if (sortBy === \"Title\") {\r\n      setMovies(\r\n        toSort.sort((a, b) => {\r\n          return b.title.localeCompare(a.title);\r\n        })\r\n      );\r\n    } else if (sortBy === \"VoteAverage\") {\r\n      setMovies(\r\n        toSort.sort((a, b) => {\r\n          return b.vote_average - a.vote_average;\r\n        })\r\n      );\r\n    } else if (sortBy === \"VoteCount\") {\r\n      setMovies(\r\n        toSort.sort((a, b) => {\r\n          return b.vote_count - a.vote_count;\r\n        })\r\n      );\r\n    } else if (sortBy === \"ReleaseDate\") {\r\n      setMovies(\r\n        toSort.sort((a, b) => {\r\n          return new Date(b.release_date) - new Date(a.release_date);\r\n        })\r\n      );\r\n    } else {\r\n      setMovies((pre) => pre);\r\n    }\r\n  }, [sortBy]);\r\n\r\n  /* update data when liked/blocked/movies changed */\r\n  useEffect(() => {\r\n    let cur = [...movies];\r\n    cur = cur.filter((movie) => {\r\n      return !blocked.includes(movie.id);\r\n    });\r\n    const torender = cur.map((movie) => {\r\n      let likedStatus = false;\r\n      if (liked.includes(movie.id)) {\r\n        likedStatus = true;\r\n      }\r\n      return (\r\n        <MovieListCard\r\n          key={uuidv4()}\r\n          liked={likedStatus}\r\n          id={movie.id}\r\n          image={movie.poster_path}\r\n          title={movie.title}\r\n          rate={movie.vote_average}\r\n          release_date={movie.release_date}\r\n          vote_count={movie.vote_count}\r\n          onUnLiked={unlikeMovie}\r\n          onLiked={likeMovie}\r\n          onBlock={blockMovie}\r\n        />\r\n      );\r\n    });\r\n    setRealdata(torender);\r\n  }, [liked, blocked, movies]);\r\n\r\n  function pageUp() {\r\n    setCurpage((prev) => {\r\n      return prev + 1;\r\n    });\r\n  }\r\n\r\n  function pageDown() {\r\n    setCurpage((prev) => {\r\n      return prev - 1;\r\n    });\r\n  }\r\n\r\n  function fileterTitle() {\r\n    if (sortBy === \"Title\") {\r\n      let newlist = [...movies];\r\n      setMovies(newlist.reverse());\r\n    } else {\r\n      setSortBy(\"Title\");\r\n    }\r\n  }\r\n\r\n  function fileterVoteAverage() {\r\n    if (sortBy === \"VoteAverage\") {\r\n      let newlist = [...movies];\r\n      setMovies(newlist.reverse());\r\n    } else {\r\n      setSortBy(\"VoteAverage\");\r\n    }\r\n  }\r\n\r\n  function fileterReleaseDate() {\r\n    if (sortBy === \"ReleaseDate\") {\r\n      let newlist = [...movies];\r\n      setMovies(newlist.reverse());\r\n    } else {\r\n      setSortBy(\"ReleaseDate\");\r\n    }\r\n  }\r\n\r\n  function filterVoteCount() {\r\n    if (sortBy === \"VoteCount\") {\r\n      let newlist = [...movies];\r\n      setMovies(newlist.reverse());\r\n    } else {\r\n      setSortBy(\"VoteCount\");\r\n    }\r\n  }\r\n\r\n  function blockMovie(id) {\r\n    dispatch(unlike(id));\r\n    dispatch(block(id));\r\n  }\r\n\r\n  function likeMovie(id) {\r\n    dispatch(like(id));\r\n  }\r\n\r\n  function unlikeMovie(id) {\r\n    dispatch(unlike(id));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {curpage === 1 ? (\r\n          <button disabled>-</button>\r\n        ) : (\r\n          <button className=\"page-button\" onClick={pageDown}>\r\n            -\r\n          </button>\r\n        )}\r\n        <span className=\"curpage\">{curpage}/1000 page</span>\r\n        {curpage === 1000 ? (\r\n          <button disabled>+</button>\r\n        ) : (\r\n          <button className=\"page-button\" onClick={pageUp}>\r\n            +\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"mt-3\">\r\n        <button className=\"filter-button\" onClick={fileterTitle}>\r\n          Title\r\n        </button>\r\n        <button className=\"filter-button\" onClick={fileterVoteAverage}>\r\n          Vote Average\r\n        </button>\r\n        <button className=\"filter-button\" onClick={fileterReleaseDate}>\r\n          Release Date\r\n        </button>\r\n        <button className=\"filter-button\" onClick={filterVoteCount}>\r\n          Vote Count\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={\r\n          \"container-fluid d-flex flex-wrap justify-content-center mt-3\"\r\n        }\r\n      >\r\n        {realData}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\LikeMovieList.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\BlockedMovieList.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\NotFound.js",[],[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\containers\\Pages\\Home.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Menu\\Menu.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Card\\BlockedMovieListCard.js",["76"],[],"import React from \"react\";\r\nimport './BlockedMovieListCard.css'\r\n\r\n\r\nexport default function BlockedMovieListCard(props){\r\n  const imgUrl = 'https://image.tmdb.org/t/p/original'\r\n\r\n  function handleUnBlock(){\r\n    props.addUnBlock(props.id)\r\n  }\r\n  function handleLike(){\r\n    props.addLike(props.id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"Blocked\">\r\n      <img src= {imgUrl + props.poster_path} />\r\n      {/* <img src=\"https://www.themoviedb.org/t/p/w600_and_h900_bestv2/7edsari1arpt91inta3aqqaDEPV.jpg\" /> */}\r\n      <div className=\"buttons\">\r\n        <button onClick={handleUnBlock}>UnBlock</button>\r\n        <button onClick={handleLike}>Like</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Card\\LikeMovieListCard.js",["77"],[],"import React from \"react\";\r\nimport './LikeMovieListCard.css'\r\n\r\n\r\nexport default function LikeMovieListCard(props){\r\n  const imgUrl = 'https://image.tmdb.org/t/p/original'\r\n\r\n  function handleUnlike(){\r\n    props.addUnlike(props.id)\r\n  }\r\n  function handleBlock(){\r\n    props.addBlock(props.id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"Liked\">\r\n      <img src= {imgUrl + props.poster_path} />\r\n      {/* <img src=\"https://www.themoviedb.org/t/p/w600_and_h900_bestv2/7edsari1arpt91inta3aqqaDEPV.jpg\" /> */}\r\n      <div className=\"buttons\">\r\n        <button onClick={handleUnlike}>Unlike</button>\r\n        <button onClick={handleBlock}>Block</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n","C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\store\\store.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\features\\movieList\\AllInOneSlice.js",[],[],"C:\\Users\\t4158\\OneDrive\\文件\\GitHub\\Movie-list\\movie-list\\src\\Components\\Card\\MovieListCard.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":3,"column":35,"nodeType":"80","messageId":"81","endLine":3,"endColumn":39},{"ruleId":"82","severity":1,"message":"83","line":46,"column":6,"nodeType":"84","endLine":46,"endColumn":15,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":78,"column":6,"nodeType":"84","endLine":78,"endColumn":14,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":108,"column":6,"nodeType":"84","endLine":108,"endColumn":30,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":17,"column":7,"nodeType":"92","endLine":17,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":17,"column":7,"nodeType":"92","endLine":17,"endColumn":48},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'movieinfos'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has missing dependencies: 'blockMovie', 'likeMovie', and 'unlikeMovie'. Either include them or remove the dependency array.",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [curpage, dispatch, movieinfos]",{"range":"102","text":"103"},"Update the dependencies array to be: [movies, sortBy]",{"range":"104","text":"105"},"Update the dependencies array to be: [liked, blocked, movies, unlikeMovie, likeMovie, blockMovie]",{"range":"106","text":"107"},[1602,1611],"[curpage, dispatch, movieinfos]",[2440,2448],"[movies, sortBy]",[3272,3296],"[liked, blocked, movies, unlikeMovie, likeMovie, blockMovie]"]